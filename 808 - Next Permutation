123
132 -- nxt element is always grtr
213
231
312    TC O(n) SC O(1)
321
// algo : 
// eg 1 3 5 4 2 
- traverse backwards , find an elemnt , such a[i]<a[i+1] ,, here 3, 5 , hence i = 1
- traverse backwards  find such that any element > a[i] , here 4 , index = 3
- swap(index 1 , index 3) // 1 4 5 3 2
- reverse from index 1 ,so it becomes // 1 4 2 3 5


class Solution {
    public void nextPermutation(int[] nums) {
        int m=-1,n=-1;
        for(int i =nums.length-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                m=i;                // traverse backwards , find an elemnt , such a[i]<a[i+1] ,, here 3, 5 , hence i = 1
                break;
            }
  
        }
        if(m==-1){
            reverse(nums,0,nums.length-1);
            return;
        }
        
        for(int i =nums.length-1;i>=0;i--){
            
            if(nums[i]>nums[m]){          //traverse backwards  find such that any element > a[i] , here 4 , index = 3
                n=i;
                break;
            }
        }
        
         if(n==-1){
            reverse(nums,0,nums.length-1);
            return;
        }
        
        int t = nums[m];      //swap(index 1 , index 3)
        nums[m]=nums[n];
        nums[n]=t;
        
        int mid = (nums.length+m+1)/2;
            int j = nums.length-1;
        for(int i = m+1;i<mid;i++){        //everse from index 1 ,so it becomes // 1 4 2 3 5
             int te = nums[i];
            nums[i]=nums[j];
            nums[j]=te;
            j--;
            
        }
    }
    
    public void reverse(int nums[] , int i , int k){
        int j =k;
        for( i = 0;i<=k/2;i++){
             int te = nums[i];
            nums[i]=nums[j];
            nums[j]=te;
            j--;
            
        }
    }
}

